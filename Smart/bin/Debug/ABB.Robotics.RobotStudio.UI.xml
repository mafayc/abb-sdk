<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ABB.Robotics.RobotStudio.UI</name>
    </assembly>
    <members>
        <member name="T:ABB.Robotics.RobotStudio.UI.DisplayOrder">
            <summary>
            Specifies how <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>s are sorted in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/>.
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DisplayOrder.Default">
            <summary>
            Nodes are sorted according to <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SortProperty"/> and <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SortDirection"/>.
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DisplayOrder.AsIs">
            <summary>
            No sorting. 
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DisplayOrder.Alphabetical">
            <summary>
            Nodes are sorted alphabetically by the Text property.
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.DropTargetFeedback">
            <summary>
            Specifies visual feedback when the user drags an object over a node in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/>.
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DropTargetFeedback.None">
            <summary>
            Indicates that the object cannot be dropped.
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DropTargetFeedback.CanDrop">
            <summary>
            Indicates that the object can be dropped on the target node.
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DropTargetFeedback.InsertAfter">
            <summary>
            Indicates that the object can be inserted after the target node.
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.PropertyChangingCancelEventArgs">
            <summary>
            Provides data for the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeNode.PropertyChanging"/> and <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanging"/> events.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.PropertyChangingCancelEventArgs.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.PropertyChangingCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value that indicates that the property is not allowed to change.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.PropertyChangingCancelEventArgs.NewValue">
            <summary>
            Gets or sets the new value of the property.
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.RobotStudioWindows">
            <summary>
            Gives access to builtin Robotstudio windows
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.RobotStudioWindows.ShowDiffWindow(System.String,System.String,System.String,System.String)">
            <summary>
            Displays a window showing the difference between two texts
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.RobotStudioWindows.ShowDiffWindow(System.String,System.String,System.String,System.String,ABB.Robotics.RobotStudio.UI.DiffTextType)">
            <summary>
            Displays a window showing the difference between two texts
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.DiffTextType">
            <summary>
            Type of text to run a diff operation on
            </summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DiffTextType.Rapid">
            <summary>RAPID Module</summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DiffTextType.Cfg">
            <summary>Controller Configuration</summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DiffTextType.Xml">
            <summary>XML Text</summary>
        </member>
        <member name="F:ABB.Robotics.RobotStudio.UI.DiffTextType.Other">
            <summary>Any other text format</summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.UIServices">
            <summary>
            Provides various services.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.UIServices.NaturalOrderSorter">
            <summary>
            Returns a comparer that sorts strings in natural sort order
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.UIServices.ReverseNaturalOrderSorter">
            <summary>
            Returns a comparer that sorts strings in reverse natural sort order
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.UIServices.NaturalOrderSort(System.String,System.String,System.Boolean)">
            <summary>
            Implements a natural order sort
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.UIServices.NaturalOrderSort(System.Object,System.Object)">
            <summary>
            Implements a natural order sort
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.GridViewSortColumn">
            <summary>
            GridViewColumn which specifies a property used for sorting items in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/>.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.GridViewSortColumn.SortProperty">
            <summary>
            Specifies the property of a subclassed <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> which will be used for sorting when this column is clicked.
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfTreeView">
            <summary>
            Tree view with multi-select support, text headers and optional grid view
            for displaying additional information in columns.
            </summary>
            <summary>
            WpfTreeView
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.TreeModel">
            <summary>
            Gets or sets the TreeModel that specifies the contents of the tree view.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.GridMode">
            <summary>
            Specifies if additional properties will displayed in columns beside the tree.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.Columns">
            <summary>
            Specifies the columns to display if GridMode is true.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeView.AdjustColumnWidths(System.Boolean)">
            <summary>
            Adjusts the width of columns to their content.
            </summary>
            <param name="includeFirstColumn"></param>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.FirstColumnHeader">
            <summary>
            Specifies the text of the column that corresponds to the tree itself.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.FirstColumnWidth">
            <summary>
            Specifies the text of the column that corresponds to the tree itself.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeView.GetObjectFromElement(System.Object)">
            <summary>
            Returns the object that corresponds to a FrameworkElement in the tree view.
            </summary>
            <param name="elem">UI element, typically the sender of an event.</param>
            <returns></returns>
            <remarks>If the model is a WpfTreeModel, the returned object is a WpfTreeNode.</remarks>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.DelaySelection">
            <summary>
            Delay selection until mouse button is released
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeView.TrackSelection">
            <summary>
            Specifies if selected objects should automatically be scrolled into view.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeView.Refresh(System.Boolean)">
            <summary>
            Refreshes the contents of the tree view.
            </summary>
            <param name="keepExpanded">True to keep the expanded state of nodes, false to collapse all nodes.</param>
            <remarks>This is normally not needed; the tree view is automatically updated when adding or removing <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>s.</remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeView.RenameSelectedNode">
            <summary>
            Begin editing the text of the selected node.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode">
            <summary>
            Represents a node in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeModel"/> with a check box.
            </summary>
            <remarks>
            This node should be used in a grid-style <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/> with a <see cref="T:System.Windows.Controls.CheckBox"/> control in the data template.
            The CheckBox control should be bound to the "Object.IsChecked" property and have "IsThreeState" set to true.
            Other bindable properties are "CheckBoxEnabled" and "CheckBoxVisibility".
            </remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.#ctor">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode"/>
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.#ctor(System.String,System.Windows.Media.ImageSource)">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode"/>
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.#ctor(System.String,System.Windows.Media.ImageSource,System.Collections.Generic.IEnumerable{ABB.Robotics.RobotStudio.UI.WpfTreeNode})">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode"/>
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.IsChecked">
            <summary>
            Gets or sets the check state of the CheckBox. Null corresponds to an indeterminate check state.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.CheckBoxEnabled">
            <summary>
            Gets or sets the "CheckBoxEnabled" property.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.CheckBoxVisibility">
            <summary>
            Gets or sets the "CheckBoxVisibility" property.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.NotifyParent">
            <summary>
            Specifies if the check state should be propagated to the parent node.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.NotifyChildren">
            <summary>
            Specifies if the check state should be propagated to the child nodes.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.SetCheckState(System.Nullable{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Programatically sets the check state of this node.
            </summary>
            <param name="value"></param>
            <param name="notifyParent"></param>
            <param name="notifyChildren"></param>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.ChildChecked">
            <summary>
            Updates the check state of this node based on the check state of it's children.
            Also called when children are added or removed.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfCheckedTreeNode.ParentChecked(System.Boolean)">
            <summary>
            Updates the check state of this node based on the check state of it's parent
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfTreeHeader">
            <summary>
            Represents a header that is used for grouping nodes in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/>.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.#ctor(System.String,System.Int32,System.Windows.Media.Brush)">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeHeader"/>.
            </summary>
            <param name="text">Header text</param>
            <param name="order">Header order; headers are sorted in ascending order.</param>
            <param name="brush"><see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.Brush"/> used for rendering the header. </param>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.Text">
            <summary>
            Gets the header text.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.Order">
            <summary>
            Gets the header order.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.Brush">
            <summary>
            Gets the header brush.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.CompareTo(ABB.Robotics.RobotStudio.UI.WpfTreeHeader)">
            <summary>
            Compares two objects
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.Equals(System.Object)">
            <summary>
            Returns true if the two instances are equal
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeHeader.GetHashCode">
            <summary>
            Returns a hash code for the object
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfTreeModel">
            <summary>
            View model for a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/> populated by <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>s.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Dispose">
            <summary>
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Root">
            <summary>
            Returns the (hidden) root of the node hierarchy. This node's children are the visible roots in the tree view.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.ExpandRootNodes">
            <summary>
            Gets or sets if the visible root nodes should always be expanded. If true, the expander arrow for the
            root nodes will not be visible.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.HandleSelection">
            <summary>
            If true, TreeView selection will be automatically synced with the RobotStudio API (Selection.SelectedObjects).
            Context menu will also be handled.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SelectedNodes">
            <summary>
            Returns the nodes that are selected in the tree view.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Filter">
            <summary>
            Gets or sets a predicate that decides if a node is visible in the tree view.
            If null, all nodes are visible.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SortProperty">
            <summary>
            Gets or sets the property to sort by, if <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.DisplayOrder"/> is <see cref="F:ABB.Robotics.RobotStudio.UI.DisplayOrder.Default"/>.
            </summary>
            <remarks>
            This is updated automatically when the user clicks a <see cref="T:ABB.Robotics.RobotStudio.UI.GridViewSortColumn"/> in the tree view.
            </remarks>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SortDirection">
            <summary>
            Gets or sets the sort direction, if <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.DisplayOrder"/> is <see cref="F:ABB.Robotics.RobotStudio.UI.DisplayOrder.Default"/>.
            </summary>
            <remarks>
            This is inverted automatically the second time the user clicks a <see cref="T:ABB.Robotics.RobotStudio.UI.GridViewSortColumn"/> in the tree view.
            </remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetSelectedObjects">
            <summary>
            Returns the selected <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>s.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.FindNodes(System.Predicate{ABB.Robotics.RobotStudio.UI.WpfTreeNode})">
            <summary>
            Finds all nodes that satisfy a predicate.
            </summary>
            <param name="pred"></param>
            <returns></returns>
        </member>
        <member name="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Populate">
            <summary>
            Occurs the first time the tree view asks for the children of a node with DelayPopulate = true.
            </summary>
        </member>
        <member name="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.ShowContextMenu">
            <summary>
            Occurs when the user right-clicks in the tree view.
            </summary>
            <remarks>
            Only raised if <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.HandleSelection"/> is false.
            </remarks>
        </member>
        <member name="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanging">
            <summary>
            Occurs before a property value of a node changes, allowing the subscriber to cancel the change.
            </summary>
            <remarks>
            Supported properties are "IsChecked". The e parameter will be of the type <see cref="T:ABB.Robotics.RobotStudio.UI.PropertyChangingCancelEventArgs"/>.
            </remarks>
        </member>
        <member name="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanged">
            <summary>
            Occurs when a property value of a node changes.
            </summary>
            <remarks>
            Typical properties are "IsChecked", "IsSelected".
            </remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.CanSelectObject(System.Object)">
            <summary>
            Returns true if a selected object should be added to <see cref="P:ABB.Robotics.RobotStudio.Selection.SelectedObjects"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
            <remarks>
            Only used if <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.HandleSelection"/> is true. Override if needed.
            </remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetSelectionTypeForObject(System.Object)">
            <summary>
            Returns the type used for displaying a context menu for an object. <see cref="M:ABB.Robotics.RobotStudio.Environment.UIEnvironment.GetContextMenu(System.Object)"/>
            </summary>
            <param name="obj"></param>
            <returns></returns>
            <remarks>
            Only called if <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.HandleSelection"/> is true.
            The returned type corresponds to the argument to <see cref="M:ABB.Robotics.RobotStudio.Environment.UIEnvironment.GetContextMenu(System.Object)"/>.
            The default implementation returns the type name; override if needed.
            </remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetDropTargetFeedback(System.Object,System.Object[],System.Boolean)">
            <summary>
            Called when the user drags an object over a node in the tree view.
            </summary>
            <param name="target"></param>
            <param name="draggedObjects"></param>
            <param name="copy"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Drop(System.Object,System.Object[],System.Boolean)">
            <summary>
            Called when the user releases a dragged object over a node in the tree view.
            </summary>
            <param name="target"></param>
            <param name="draggedObjects"></param>
            <param name="copy"></param>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetNodeParent(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetNodeChildren(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetNodeText(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetNodeToolTip(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetNodeImage(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.StartExpanded(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.HasNodeChildren(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SetNodeText(System.Object,System.String)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.OnSelectionStateChanged(System.Object,System.Boolean)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.OnExpandedChanged(RobotStudio.API.Internal.TreeNodeEx)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.OnHeaderClicked(System.Windows.Controls.GridViewColumn,System.Int32)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.ContextMenu(System.Int32,System.Int32)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.IsNodeSelected(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.ClearSelection">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.SetNodeSelected(System.Object,System.Boolean)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.ActivateObject(System.Object)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.GetDropTargetFeedback(System.Object,System.Windows.IDataObject,System.Boolean)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Drop(System.Object,System.Windows.IDataObject,System.Boolean)">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.OnNodePropertyChanging(ABB.Robotics.RobotStudio.UI.WpfTreeNode,ABB.Robotics.RobotStudio.UI.PropertyChangingCancelEventArgs)">
            <summary>
            Raises the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanging"/> event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.OnNodePropertyChanged(ABB.Robotics.RobotStudio.UI.WpfTreeNode,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanged"/> event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeModel.OnPopulate(ABB.Robotics.RobotStudio.UI.WpfTreeNode)">
            <summary>
            Raises the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Populate"/> event.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode">
            <summary>
            Represents a node in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeModel"/>.
            </summary>
            <remarks>
            When used with WpfTreeModel, the tree is automatically updated when children are added or removed.
            </remarks>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.FromElement(System.Windows.FrameworkElement)">
            <summary>
            Gets the <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> that corresponds to a UI element in the tree view.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.#ctor">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.#ctor(System.String,System.Windows.Media.ImageSource)">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.#ctor(System.String,System.Windows.Media.ImageSource,System.Collections.Generic.IEnumerable{ABB.Robotics.RobotStudio.UI.WpfTreeNode})">
            <summary>
            Creates a new <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Parent">
            <summary>
            Returns the parent node.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Children">
            <summary>
            Returns a collection of child nodes.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.StartExpanded">
            <summary>
            Specifies if the node should be expanded when it is added or when the tree is refreshed.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.DelayPopulate">
            <summary>
            Specifies if the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.Populate"/> event should be raised the first time the node children are requested.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Tag">
            <summary>
            An object that contains data about the node.
            </summary>
            <remarks>
            If <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeModel.HandleSelection"/> is true, this must be the object that the node represents.
            </remarks>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.ToolTip">
            <summary>
            Specifies a tooltip for the node.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Text">
            <summary>
            Specifies the node text.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Foreground">
            <summary>
            Specifies the node foreground (text) brush
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Image">
            <summary>
            Specifies the node image.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Header">
            <summary>
            Specifies a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeHeader"/> that the node should be displayed under. The default is null.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Descendants(System.Predicate{ABB.Robotics.RobotStudio.UI.WpfTreeNode})">
            <summary>
            Returns all descendant nodes that satisfy a predicate.
            </summary>
            <param name="pred"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Descendants``1(System.Predicate{``0})">
            <summary>
            Returns all descendant nodes of a specified type that satisfy a predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pred"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Descendants">
            <summary>
            Returns all descendant nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Descendants``1">
            <summary>
            Returns all descendant nodes of a specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Descendants(System.Object)">
            <summary>
            Returns all descendant nodes with the specified Tag.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Descendants``1(System.Object)">
            <summary>
            Returns all descendant nodes of a specified type with the specified Tag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Ancestors(System.Boolean)">
            <summary>
            Returns all ancestors of this node, optionally including this node.
            </summary>
            <param name="includeSelf"></param>
            <returns></returns>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.IsExpanded">
            <summary>
            Gets or sets if this node is expanded in the tree view.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.IsSelected">
            <summary>
            Gets or sets if this node is selected in the tree view.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Remove">
            <summary>
            Removes this node from its parent.
            </summary>
        </member>
        <member name="E:ABB.Robotics.RobotStudio.UI.WpfTreeNode.PropertyChanging">
            <summary>
            Occurs before a property value changes.
            </summary>
        </member>
        <member name="E:ABB.Robotics.RobotStudio.UI.WpfTreeNode.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.OnPropertyChanging(System.String,System.Object)">
            <summary>
            Raises the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeNode.PropertyChanging"/> and <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanging"/> events.
            </summary>
            <returns>True when an event subscriber has requested to cancel the change.</returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNode.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeNode.PropertyChanged"/> and <see cref="E:ABB.Robotics.RobotStudio.UI.WpfTreeModel.NodePropertyChanged"/> events.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Model">
            <summary>
            Returns the <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeModel"/> that contains this node.
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfTreeRoot">
            <summary>
            Represents the root of the node hierarchy. This node is not visible in the tree view; it's children are.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeRoot.Model">
            <summary>
            ABB internal use
            </summary>
        </member>
        <member name="T:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection">
            <summary>
            A collection of <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> objects.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Add(ABB.Robotics.RobotStudio.UI.WpfTreeNode)">
            <summary>
            Adds a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> to the collection.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.AddRange(System.Collections.Generic.IEnumerable{ABB.Robotics.RobotStudio.UI.WpfTreeNode})">
            <summary>
            Adds <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>s to the collection.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Insert(System.Int32,ABB.Robotics.RobotStudio.UI.WpfTreeNode)">
            <summary>
            Inserts a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> at the specified index.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.IndexOf(ABB.Robotics.RobotStudio.UI.WpfTreeNode)">
            <summary>
            Returns the zero-based index of the specified <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Remove(System.Object)">
            <summary>
            Removes the <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> with the specified <see cref="P:ABB.Robotics.RobotStudio.UI.WpfTreeNode.Tag"/>.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Remove(ABB.Robotics.RobotStudio.UI.WpfTreeNode)">
            <summary>
            Removes a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/> from the collection.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.RemoveWhere(System.Predicate{ABB.Robotics.RobotStudio.UI.WpfTreeNode})">
            <summary>
            Removes all <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>s that satisfy a predicate.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Clear">
            <summary>
            Removes all nodes.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Contains(ABB.Robotics.RobotStudio.UI.WpfTreeNode)">
            <summary>
            Determines whether the collection contains a specified <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeNode"/>.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.CopyTo(ABB.Robotics.RobotStudio.UI.WpfTreeNode[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.DisplayOrder">
            <summary>
            Specifies how the nodes are sorted when displayed in a <see cref="T:ABB.Robotics.RobotStudio.UI.WpfTreeView"/>.
            </summary>
        </member>
        <member name="P:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.DisplayLeafsLast">
            <summary>
            Specifies if leaf nodes always should be displayed after nodes with children.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:ABB.Robotics.RobotStudio.UI.WpfTreeNodeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="T:RobotStudio.API.Internal.SliderEx">
            <summary>
            Interaction logic for SliderEx.xaml
            </summary>
            <summary>
            SliderEx
            </summary>
        </member>
        <member name="M:RobotStudio.API.Internal.SliderEx.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.SetOwner(System.Windows.Window,System.Windows.Forms.IWin32Window)">
            <summary>
            Sets the owner of the Window
            </summary>
            <remarks>
            Call this before displaying a WPF window as a modal dialog, to ensure it stays on top of RobotStudio
            </remarks>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.SetOwner(System.Windows.Window,System.Windows.DependencyObject)">
            <summary>
            Sets the owner of the Window
            </summary>
            <remarks>
            Call this before displaying a WPF window as a modal dialog, to ensure it stays on top of RobotStudio
            </remarks>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.ShowDialog(System.Windows.Window,System.Windows.FrameworkElement)">
            <summary>
            Displays a WPF dialog with any WPF element as owner
            </summary>
            <returns></returns>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.ShowDialog(System.Windows.Window,System.Windows.Forms.IWin32Window)">
            <summary>
            Displays a WPF dialog with any Win32 window as owner
            </summary>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.Show(System.Windows.Window,System.Windows.FrameworkElement)">
            <summary>
            Displays a WPF window with any WPF element as owner
            </summary>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.Show(System.Windows.Window,System.Windows.Forms.IWin32Window)">
            <summary>
            Displays a WPF window with any Win32 window as owner
            </summary>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.DisableButtons(System.Windows.Window,System.Boolean,System.Boolean)">
            <summary>
            Disables the minimize/maximize buttons of a WPF window.
            </summary>
        </member>
        <member name="M:RobotStudio.API.Internal.WpfUtils.GetPixelSize(System.Windows.UIElement)">
            <summary>
            Get the size of a WPF element in actual screen pixels.
            </summary>
            <param name="element">The UIElement to get the size from</param>
            <returns>Size in pixels</returns>
            <remarks>
            Adapted from http://stackoverflow.com/questions/3286175/how-do-i-convert-a-wpf-size-to-physical-pixels
            </remarks>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
